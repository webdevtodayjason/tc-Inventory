"""Add mobile models and fields

Revision ID: 2f17d42c7481
Revises: add_mobile_tables
Create Date: 2025-01-24 10:06:41.914570

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2f17d42c7481'
down_revision = 'add_mobile_tables'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('checkout_reason', sa.String(length=100), nullable=True),
    sa.Column('is_mobile', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('transactions')
    op.drop_table('system_tags')
    with op.batch_alter_table('computer_model', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('manufacturer',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('model_name',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('model_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False)

    with op.batch_alter_table('computer_systems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('serial_number', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('location', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('checked_out_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('checked_out_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('checkout_reason', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('checkout_notes', sa.Text(), nullable=True))
        batch_op.alter_column('tracking_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('model_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('cpu_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('ram',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('storage',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.alter_column('os',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.drop_constraint('computer_systems_tested_by_fkey', type_='foreignkey')
        batch_op.drop_constraint('computer_systems_creator_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['checked_out_by_id'], ['id'])
        batch_op.drop_column('usb_ports_notes')
        batch_op.drop_column('video_status')
        batch_op.drop_column('network_status')
        batch_op.drop_column('tested_by')
        batch_op.drop_column('serial_tag')
        batch_op.drop_column('network_notes')
        batch_op.drop_column('video_notes')
        batch_op.drop_column('creator_id')
        batch_op.drop_column('cpu_benchmark')
        batch_op.drop_column('usb_ports_status')
        batch_op.drop_column('general_notes')
        batch_op.drop_column('storage_location')

    with op.batch_alter_table('cpu', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('manufacturer',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('model',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=100),
               existing_nullable=False)
        op.execute('ALTER TABLE cpu ALTER COLUMN speed TYPE double precision USING (CASE WHEN speed ~ E\'^\\\\d+(\\\\.\\\\d+)?$\' THEN speed::double precision ELSE 0.0 END)')
        batch_op.alter_column('speed',
               nullable=False)
        batch_op.alter_column('cores',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('benchmark',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)

    with op.batch_alter_table('item_tags', schema=None) as batch_op:
        batch_op.drop_constraint('item_tags_item_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('item_tags_tag_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tag', ['tag_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('mobile_checkout_reasons', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)

    with op.batch_alter_table('mobile_device_tokens', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('device_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mobile_device_tokens', schema=None) as batch_op:
        batch_op.alter_column('device_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('mobile_checkout_reasons', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('item_tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('item_tags_tag_id_fkey', 'tag', ['tag_id'], ['id'])
        batch_op.create_foreign_key('item_tags_item_id_fkey', 'items', ['item_id'], ['id'])

    with op.batch_alter_table('cpu', schema=None) as batch_op:
        batch_op.alter_column('benchmark',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('cores',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('speed',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('model',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False)
        batch_op.alter_column('manufacturer',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('computer_systems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('storage_location', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('general_notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('usb_ports_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('cpu_benchmark', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('video_notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('network_notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('serial_tag', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('tested_by', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('network_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('video_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('usb_ports_notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('computer_systems_creator_id_fkey', 'users', ['creator_id'], ['id'])
        batch_op.create_foreign_key('computer_systems_tested_by_fkey', 'users', ['tested_by'], ['id'])
        batch_op.alter_column('os',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('storage',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=128),
               nullable=False)
        batch_op.alter_column('ram',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('cpu_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('model_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('tracking_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_column('checkout_notes')
        batch_op.drop_column('checkout_reason')
        batch_op.drop_column('checked_out_at')
        batch_op.drop_column('checked_out_by_id')
        batch_op.drop_column('notes')
        batch_op.drop_column('location')
        batch_op.drop_column('serial_number')

    with op.batch_alter_table('computer_model', schema=None) as batch_op:
        batch_op.alter_column('model_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('model_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False)
        batch_op.alter_column('manufacturer',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.drop_column('updated_at')

    op.create_table('system_tags',
    sa.Column('system_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['computer_systems.id'], name='system_tags_system_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='system_tags_tag_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('system_id', 'tag_id', name='system_tags_pkey')
    )
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity_changed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('is_mobile', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name='transactions_item_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='transactions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.drop_table('inventory_transactions')
    # ### end Alembic commands ###
